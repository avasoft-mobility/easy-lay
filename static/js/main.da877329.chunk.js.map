{"version":3,"sources":["pages/HomePage/HomePage.js","models/env.js","helpers/constants.js","helpers/credentialManager.js","helpers/httpHelper.js","services/StoreService.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","id","ENV","Object","freeze","dev","qa","uat","learning","prod","ACCESS_TOKEN_KEY","ENV_KEY","getAccessToken","accessToken","localStorage","getItem","JSON","parse","setAccessToken","setItem","stringify","HttpClient","handleError","error","console","log","message","Get","URL","a","axios","get","catch","Post","Body","post","getBaseURL","baseURL","Config","BASE_URLS","DEV","QA","UAT","LEARNING","PROD","RequestAccessToken","httpClient","create","ROUTES","ACCESS_TOKEN","headers","API_SERVICE_KEY","process","REACT_APP_DEV_API_SERVICE_KEY","JWT_TOKEN_KEY","REACT_APP_DEV_JWT_TOKEN_KEY","getToken","expireTime","Date","now","token","newAccessToken","status","currentDate","setSeconds","getSeconds","data","expiresIn","parsedData","toString","setToken","interceptors","request","use","config","url","Authorization","getAllStores","GET_ALL_RETAILERS","App","useEffect","response","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da877329.chunk.js","sourcesContent":["import React from 'react';\nimport './HomePage.scss';\n\nconst HomePage = () => (\n  <div id=\"HomePage\">\n    <h1>Application is under development, please come back later!</h1>\n  </div>\n);\n\nexport default HomePage;\n","const ENV = Object.freeze({\n  dev: 0,\n  qa: 1,\n  uat: 2,\n  learning: 3,\n  prod: 4,\n});\n\nexport default ENV;\n","const ACCESS_TOKEN_KEY = 'EasyLayAccessToken';\nconst ENV_KEY = 'EasyLayEnv';\n\nexport { ACCESS_TOKEN_KEY, ENV_KEY };\n","import { ACCESS_TOKEN_KEY, ENV_KEY } from './constants';\n\nconst getAccessToken = () => {\n  const accessToken = localStorage.getItem(ACCESS_TOKEN_KEY);\n  return accessToken !== null ? JSON.parse(accessToken) : null;\n};\n\nconst setAccessToken = (accessToken) => {\n  localStorage.setItem(ACCESS_TOKEN_KEY, JSON.stringify(accessToken));\n};\n\nconst getEnv = () => localStorage.getItem(ENV_KEY);\n\nconst setEnv = (env) => {\n  localStorage.setItem(ENV_KEY, env);\n};\n\nexport { getAccessToken, setAccessToken, getEnv, setEnv };\n","import axios from 'axios';\nimport ENV from '../models/env';\nimport Config from '../configs/config.json';\nimport {\n  getAccessToken as getToken,\n  setAccessToken as setToken,\n  getEnv,\n} from './credentialManager';\n\n// This class acts as a wrapper for axios http client\nclass HttpClient {\n  static Get = async (URL) => axios.get(URL).catch(this.handleError);\n\n  static Post = async (URL, Body) => axios.post(URL, Body).catch(this.handleError);\n\n  // handle the http error globally\n  handleError = (error) => console.log(error.message);\n}\n\nconst getBaseURL = () => {\n  const currentEnv = getEnv();\n\n  let baseURL = '';\n  switch (currentEnv) {\n    case ENV.dev:\n      baseURL = Config.BASE_URLS.DEV;\n      break;\n\n    case ENV.qa:\n      baseURL = Config.BASE_URLS.QA;\n      break;\n\n    case ENV.uat:\n      baseURL = Config.BASE_URLS.UAT;\n      break;\n\n    case ENV.learning:\n      baseURL = Config.BASE_URLS.LEARNING;\n      break;\n\n    case ENV.prod:\n      baseURL = Config.BASE_URLS.PROD;\n      break;\n    default:\n      baseURL = Config.BASE_URLS.DEV;\n      break;\n  }\n\n  return baseURL;\n};\n\nconst RequestAccessToken = async () => {\n  const httpClient = axios.create({\n    baseURL: getBaseURL(),\n  });\n\n  return httpClient.get(Config.ROUTES.ACCESS_TOKEN, {\n    headers: {\n      API_SERVICE_KEY: process.env.REACT_APP_DEV_API_SERVICE_KEY,\n      JWT_TOKEN_KEY: process.env.REACT_APP_DEV_JWT_TOKEN_KEY,\n    },\n  });\n};\n\nconst getAccessToken = async () => {\n  try {\n    const accessToken = getToken();\n\n    if (\n      accessToken !== null &&\n      accessToken.expireTime !== '' &&\n      Date.parse(accessToken.expireTime) > Date.now()\n    ) {\n      return accessToken.token;\n    }\n\n    const newAccessToken = await RequestAccessToken();\n    if (newAccessToken.status !== 200) {\n      return '';\n    }\n\n    const currentDate = new Date(Date.now());\n    currentDate.setSeconds(currentDate.getSeconds() + newAccessToken.data.expiresIn);\n\n    const parsedData = {\n      token: newAccessToken.data.accessToken,\n      expireTime: currentDate.toString(),\n    };\n    setToken(parsedData);\n    return parsedData.token;\n  } catch (e) {\n    console.log(e.message);\n    return '';\n  }\n};\n\naxios.interceptors.request.use(async (config) => {\n  const baseURL = getBaseURL();\n\n  // Attach base url with route\n  config.url = baseURL + config.url;\n\n  // Attach auth token\n  const token = await getAccessToken();\n  config.headers = {\n    Authorization: `Bearer ${token}`,\n    API_SERVICE_KEY: process.env.REACT_APP_DEV_API_SERVICE_KEY,\n    JWT_TOKEN_KEY: process.env.REACT_APP_DEV_JWT_TOKEN_KEY,\n  };\n  return config;\n});\n\nexport default HttpClient;\nexport { getBaseURL };\n","import HttpClient from '../helpers/httpHelper';\nimport Config from '../configs/config.json';\n\nconst getAllStores = async () => {\n  try {\n    return HttpClient.Get(Config.ROUTES.GET_ALL_RETAILERS);\n  } catch (error) {\n    console.log(error.message);\n    return null;\n  }\n};\n\nexport { getAllStores };\n","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport { getAllStores } from './services/StoreService';\n\nconst App = () => {\n  useEffect(async () => {\n    try {\n      const response = await getAllStores();\n      if (response.status !== 200) {\n        // Handle Http Error\n      }\n      console.log(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/home\" element={<HomePage />} />\n        <Route path=\"/\" element={<HomePage />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}